{"ast":null,"code":"var _jsxFileName = \"/Users/alanvang/Desktop/tictactoe/src/Components/Board/Board.js\";\nimport React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png';\nimport fellowship from '../../img/fellowships.png';\n\nconst Board = () => {\n  const initialBoard = Array(9).fill(null);\n  const [squares, setSquares] = useState(intialBoard);\n  const [playerXISNext, setPlayerXIsNext] = useState(true);\n\n  const renderSquare = i => {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: squares[i],\n      onClick: () => handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    });\n  };\n\n  const handleClick = i => {\n    const newsquares = [...squares];\n    newSquares[i] = playerXIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setPlayerXIsNext(!playerXISNext);\n  };\n\n  const calculateWinner = squares => {\n    /* Squares indexes as they appear in UI:\n    0 1 2\n    3 4 5\n    6 7 8\n    */\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // shows all of the winning combinations (\"lines\")\n    // Iterate over lines \n\n    for (let line of lines) {\n      const [a, b, c] = line;\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  };\n\n  const winner = calculateWinner(squares);\n\n  const getStatus = () => {\n    if (winner) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: r2h,\n    alt: \"r2h logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: fellowship,\n    alt: \"fellowship\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8))))));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/alanvang/Desktop/tictactoe/src/Components/Board/Board.js"],"names":["React","useState","Square","r2h","fellowship","Board","initialBoard","Array","fill","squares","setSquares","intialBoard","playerXISNext","setPlayerXIsNext","renderSquare","i","handleClick","newsquares","newSquares","playerXIsNext","calculateWinner","lines","line","a","b","c","winner","getStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAMC,YAAY,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAArB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACU,WAAD,CAAtC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,IAAD,CAAlD;;AAGA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AACxB,wBAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEN,OAAO,CAACM,CAAD,CAAtB;AAA2B,MAAA,OAAO,EAAE,MAAMC,WAAW,CAACD,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAID,CAAD,IAAO;AACvB,UAAME,UAAU,GAAG,CAAC,GAAGR,OAAJ,CAAnB;AAEAS,IAAAA,UAAU,CAACH,CAAD,CAAV,GAAgBI,aAAa,GAAG,GAAH,GAAS,GAAtC;AAEAT,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACAL,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,GAPD;;AASA,QAAMQ,eAAe,GAAIX,OAAD,IAAa;AACjC;;;;;AAKD,UAAMY,KAAK,GAAG,CACb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADa,EAEb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFa,EAGb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHa,EAIb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJa,EAKb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALa,EAMb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANa,EAOb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPa,EAQb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARa,CAAd,CANkC,CAe9B;AACH;;AACA,SAAK,IAAIC,IAAT,IAAiBD,KAAjB,EAAwB;AACpB,YAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,IAAlB;;AACA,UAAIb,OAAO,CAACc,CAAD,CAAP,IAAcd,OAAO,CAACc,CAAD,CAAP,KAAed,OAAO,CAACe,CAAD,CAApC,IACAf,OAAO,CAACc,CAAD,CAAP,KAAed,OAAO,CAACgB,CAAD,CAD1B,EAC+B;AAC3B,eAAOhB,OAAO,CAACc,CAAD,CAAd;AACC;AACR;;AACD,WAAO,IAAP;AACH,GAzBD;;AA2BA,QAAMG,MAAM,GAAGN,eAAe,CAACX,OAAD,CAA9B;;AAEA,QAAMkB,SAAS,GAAG,MAAM;AACpB,QAAID,MAAJ,EAAY,CAEX;AACJ,GAJD;;AAMA,sBACI,uDACI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEvB,GAAV;AAAe,IAAA,GAAG,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,GAAG,EAAEC,UAAV;AAAsB,IAAA,GAAG,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAQI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,CANJ,eAWI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,CAXJ,CADJ,CARJ,CADJ,CADJ;AAgCH,CAvFD;;AAwFA,eAAeT,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png'\nimport fellowship from '../../img/fellowships.png'\n\nconst Board = () => {\n\n    const initialBoard = Array(9).fill(null)\n    const [squares, setSquares] = useState(intialBoard)\n    const [playerXISNext, setPlayerXIsNext] = useState(true)\n\n\n    const renderSquare = (i) => {\n        return <Square value={squares[i]} onClick={() => handleClick(i)} />\n    }\n\n    const handleClick = (i) => {\n        const newsquares = [...squares]\n\n        newSquares[i] = playerXIsNext ? \"X\" : \"O\"\n\n        setSquares(newSquares)\n        setPlayerXIsNext(!playerXISNext)\n    }\n\n    const calculateWinner = (squares) => {\n        /* Squares indexes as they appear in UI:\n        0 1 2\n        3 4 5\n        6 7 8\n        */\n       const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n        ]; // shows all of the winning combinations (\"lines\")\n        // Iterate over lines \n        for (let line of lines) {\n            const [a, b, c] = line\n            if (squares[a] && squares[a] === squares[b] &&\n                squares[a] === squares[c]) {\n                return squares[a]\n                }\n        }\n        return null\n    }\n\n    const winner = calculateWinner(squares)\n\n    const getStatus = () => {\n        if (winner) {\n            \n        }\n    }\n\n    return (\n        <>\n            <main className=\"main--container\">\n                <div className=\"logo\">\n                    <img src={r2h} alt=\"r2h logo\" />\n                    <img src={fellowship} alt=\"fellowship\" />\n                </div>\n                <div className=\"status\">\n                   \n                </div>\n                <div className=\"board--container\">\n                    <div className=\"board\">\n                        <div className=\"board--row\">\n                            {renderSquare(0)}\n                            {renderSquare(1)}\n                            {renderSquare(2)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(3)}\n                            {renderSquare(4)}\n                            {renderSquare(5)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(6)}\n                            {renderSquare(7)}\n                            {renderSquare(8)}\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}